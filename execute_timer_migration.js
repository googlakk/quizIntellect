import { createClient } from '@supabase/supabase-js';

const supabaseUrl = "https://xumczqtfbqazkhqrtmxf.supabase.co";
const supabaseKey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh1bWN6cXRmYnFhemtocXJ0bXhmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU0MTUxMjMsImV4cCI6MjA3MDk5MTEyM30.JEiLalLryC7njKJSxKam9BXXrcmk4O5ZEAGKVMJAu2Q";

const supabase = createClient(supabaseUrl, supabaseKey);

async function executeTimerMigration() {
  console.log('üîÑ –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ time_limit_seconds –≤ —Ç–∞–±–ª–∏—Ü—É questions...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª–µ
    const { data: existingQuestions } = await supabase
      .from('questions')
      .select('id, time_limit_seconds')
      .limit(1);
    
    if (existingQuestions && existingQuestions.length > 0 && 'time_limit_seconds' in existingQuestions[0]) {
      console.log('‚úÖ –ü–æ–ª–µ time_limit_seconds —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
      console.log('üìù –ü–æ–ª–µ time_limit_seconds –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç - —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –ë–î');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞ —Å –Ω–æ–≤—ã–º –ø–æ–ª–µ–º
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞ —Å —Ç–∞–π–º–µ—Ä–æ–º...');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π —Ç–µ—Å—Ç
    const { data: tests } = await supabase
      .from('tests')
      .select('id, title, test_type')
      .limit(1);
    
    if (tests && tests.length > 0) {
      const testId = tests[0].id;
      console.log(`üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç: ${tests[0].title} (${tests[0].test_type})`);
      
      // –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
      const questionData = {
        test_id: testId,
        question_text: '–¢–µ—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å —Å —Ç–∞–π–º–µ—Ä–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞',
        question_type: 'single_choice',
        points: 1,
        order_index: 999,
        time_limit_seconds: 30
      };
      
      const { data: newQuestion, error: questionError } = await supabase
        .from('questions')
        .insert(questionData)
        .select()
        .single();
      
      if (questionError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞:', questionError);
        if (questionError.message.includes('time_limit_seconds')) {
          console.log('üìù –ù—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å SQL –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è time_limit_seconds');
        }
      } else {
        console.log('‚úÖ –í–æ–ø—Ä–æ—Å —Å —Ç–∞–π–º–µ—Ä–æ–º —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ:', newQuestion.id);
        console.log(`   –í—Ä–µ–º—è: ${newQuestion.time_limit_seconds} —Å–µ–∫—É–Ω–¥`);
        
        // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
        await supabase
          .from('questions')
          .delete()
          .eq('id', newQuestion.id);
        console.log('üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å —É–¥–∞–ª–µ–Ω');
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
  }
}

executeTimerMigration();