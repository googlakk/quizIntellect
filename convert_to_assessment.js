import { createClient } from '@supabase/supabase-js';

const supabaseUrl = "https://xumczqtfbqazkhqrtmxf.supabase.co";
const supabaseKey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh1bWN6cXRmYnFhemtocXJ0bXhmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU0MTUxMjMsImV4cCI6MjA3MDk5MTEyM30.JEiLalLryC7njKJSxKam9BXXrcmk4O5ZEAGKVMJAu2Q";

const supabase = createClient(supabaseUrl, supabaseKey);

async function convertTestToAssessment() {
  console.log('üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ—Å—Ç –≤ –æ—Ü–µ–Ω–æ—á–Ω—ã–π...');
  
  // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —Ç–µ—Å—Ç
  const testId = '4cf1b10a-4418-4b4b-8195-db432d216c73'; // –ú–æ–¥—É–ª—å 1: –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –Ω–∞–≤—ã–∫–∏
  
  try {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∏–ø —Ç–µ—Å—Ç–∞ (—Ç—Ä–µ–±—É–µ—Ç –æ–±—Ö–æ–¥–∞ RLS —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é)
    console.log('üìù –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∏–ø —Ç–µ—Å—Ç–∞...');
    
    // –°–æ–∑–¥–∞–µ–º —à–∫–∞–ª—É –æ—Ü–µ–Ω–æ–∫ –¥–ª—è —ç—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
    const defaultScales = [
      { label: '–ü–ª–æ—Ö–æ –≤–ª–∞–¥–µ—é (—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±—É—á–µ–Ω–∏–µ)', points: 1, order_index: 1 },
      { label: '–ë–∞–∑–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ (–∑–Ω–∞—é –æ—Å–Ω–æ–≤—ã)', points: 2, order_index: 2 },
      { label: '–•–æ—Ä–æ—à–æ –≤–ª–∞–¥–µ—é (—É–≤–µ—Ä–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é)', points: 3, order_index: 3 },
      { label: '–û—Ç–ª–∏—á–Ω–æ –≤–ª–∞–¥–µ—é (—ç–∫—Å–ø–µ—Ä—Ç)', points: 4, order_index: 4 }
    ];
    
    const scalesData = defaultScales.map(scale => ({
      ...scale,
      test_id: testId
    }));
    
    console.log('üìä –°–æ–∑–¥–∞–µ–º —à–∫–∞–ª—É –æ—Ü–µ–Ω–æ–∫...');
    const { data: scales, error: scalesError } = await supabase
      .from('assessment_scales')
      .insert(scalesData)
      .select();
    
    if (scalesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —à–∫–∞–ª—ã:', scalesError);
      return;
    }
    
    console.log('‚úÖ –®–∫–∞–ª–∞ –æ—Ü–µ–Ω–æ–∫ —Å–æ–∑–¥–∞–Ω–∞:', scales.length, '—ç–ª–µ–º–µ–Ω—Ç–æ–≤');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é —à–∫–∞–ª—É
    scales.forEach(scale => {
      console.log(`   - ${scale.label}: ${scale.points} –±–∞–ª–ª–æ–≤`);
    });
    
    console.log('\n‚úÖ –¢–µ—Å—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∫–∞–∫ –æ—Ü–µ–Ω–æ—á–Ω—ã–π!');
    console.log(`üîó ID —Ç–µ—Å—Ç–∞: ${testId}`);
    console.log('üìù –û—Å—Ç–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å test_type –Ω–∞ "assessment" –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    console.log('   (—ç—Ç–æ —Ç—Ä–µ–±—É–µ—Ç –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å)');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:', error);
  }
}

convertTestToAssessment();