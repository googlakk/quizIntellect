import { createClient } from '@supabase/supabase-js';

const supabaseUrl = "https://xumczqtfbqazkhqrtmxf.supabase.co";
const supabaseKey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh1bWN6cXRmYnFhemtocXJ0bXhmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU0MTUxMjMsImV4cCI6MjA3MDk5MTEyM30.JEiLalLryC7njKJSxKam9BXXrcmk4O5ZEAGKVMJAu2Q";

const supabase = createClient(supabaseUrl, supabaseKey);

async function testAssessmentInterface() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Ü–µ–Ω–æ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞...');
  
  const testId = '4cf1b10a-4418-4b4b-8195-db432d216c73';
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–∞ –∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç TakeTest.tsx
    const { data, error } = await supabase
      .from('tests')
      .select(`
        *,
        categories:category_id (name),
        questions (
          *,
          answer_options (
            id,
            option_text,
            order_index,
            is_correct
          )
        ),
        assessment_scales (
          id,
          label,
          points,
          order_index
        )
      `)
      .eq('id', testId)
      .eq('is_active', true)
      .single();
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ—Å—Ç–∞:', error);
      return;
    }
    
    console.log('\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Å—Ç–µ:');
    console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${data.title}`);
    console.log(`   –¢–∏–ø: ${data.test_type}`);
    console.log(`   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–ª: ${data.max_score}`);
    console.log(`   –í–æ–ø—Ä–æ—Å–æ–≤: ${data.questions?.length || 0}`);
    console.log(`   –®–∫–∞–ª–∞ –æ—Ü–µ–Ω–æ–∫: ${data.assessment_scales?.length || 0} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤`);
    
    if (data.assessment_scales && data.assessment_scales.length > 0) {
      console.log('\nüìä –®–∫–∞–ª–∞ –æ—Ü–µ–Ω–æ–∫:');
      data.assessment_scales
        .sort((a, b) => a.order_index - b.order_index)
        .forEach(scale => {
          console.log(`   ${scale.order_index}. ${scale.label} - ${scale.points} –±–∞–ª–ª–æ–≤`);
        });
      
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –æ—Ü–µ–Ω–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
      console.log('\nüéØ –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –æ—Ü–µ–Ω–æ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞:');
      let totalScore = 0;
      const maxPossibleScore = data.questions.length * 4; // 4 - –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–ª –ø–æ —à–∫–∞–ª–µ
      
      data.questions.forEach((question, index) => {
        // –°–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º –æ—Ü–µ–Ω–∫—É –æ—Ç 2 –¥–æ 4 (–∏–º–∏—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        const randomScaleIndex = Math.floor(Math.random() * 3) + 1; // 1-3, –ø–æ—Ç–æ–º –¥–æ–±–∞–≤–∏–º 1
        const selectedScale = data.assessment_scales[randomScaleIndex];
        totalScore += selectedScale.points;
        
        console.log(`   –í–æ–ø—Ä–æ—Å ${index + 1}: ${question.question_text.substring(0, 50)}...`);
        console.log(`   –û—Ç–≤–µ—Ç: "${selectedScale.label}" (${selectedScale.points} –±–∞–ª–ª–æ–≤)`);
      });
      
      const percentage = Math.round((totalScore / maxPossibleScore) * 100);
      console.log(`\nüéâ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–º—É–ª—è—Ü–∏–∏:`);
      console.log(`   –ù–∞–±—Ä–∞–Ω–æ –±–∞–ª–ª–æ–≤: ${totalScore} –∏–∑ ${maxPossibleScore}`);
      console.log(`   –ü—Ä–æ—Ü–µ–Ω—Ç: ${percentage}%`);
      console.log(`   –≠—Ç–æ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ –∫–∞–∫ —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞ –Ω–∞–≤—ã–∫–æ–≤`);
      
      console.log(`\nüîó –°—Å—ã–ª–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: http://localhost:8082/test/${testId}`);
      
    } else {
      console.log('\n‚ùå –®–∫–∞–ª–∞ –æ—Ü–µ–Ω–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–≥–∏–∫–∞ –≤ TakeTest
    if (data.test_type === 'assessment' && data.assessment_scales) {
      console.log('\n‚úÖ –¢–µ—Å—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫ –æ—Ü–µ–Ω–æ—á–Ω—ã–π');
      console.log('‚úÖ –®–∫–∞–ª–∞ –æ—Ü–µ–Ω–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∞');
      console.log('‚úÖ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ—Ü–µ–Ω–æ—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤–º–µ—Å—Ç–æ –æ–±—ã—á–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤');
    } else {
      console.log('\n‚ö†Ô∏è  –¢–µ—Å—Ç –≤—Å–µ –µ—â–µ –∏–º–µ–µ—Ç —Ç–∏–ø "quiz" - –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å test_type');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

testAssessmentInterface();